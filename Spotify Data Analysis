#For this project, I got the data from kaggle and downloaded it and unzipped it. 
#From then I took that data and displayed it on excel.
#I then created a tabel in SQL with all the information from the excel sheet and started testing out the data in different ways. 

#this is the code for creating the table

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#These are the questions I answered with the data.

--Which artists have a popularity 90 and above but has and accousticness of .4 or higher?
SELECT artist_name,track_name,popularity
FROM BIT_DB.Spotifydata
WHERE popularity>=90
AND acousticness>0.40
ORDER BY popularity desc;

--Which artist is the most popular overall in the spotify list between all of the songs?
SELECT distinct artist_name,sum(popularity) as how_popular,count(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY how_popular desc;

--Whos is the average popularity of Olivia Rodrigo?
SELECT distinct artist_name,avg(popularity) as popular,count(popularity) as amount_of_songs
FROM BIT_DB.Spotifydata
Where artist_name like 'Oli%'
GROUP BY artist_name
ORDER BY popular;

--This selects the artist names and how many tracks they have. Then it orders the list from most tracks to least amount of tracks in the data. 
SELECT artist_name,count(track_name) as amount_of_tracks
FROM BIT_DB.Spotifydata
Group BY artist_name
ORDER BY amount_of_tracks desc;
